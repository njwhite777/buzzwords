#!/usr/bin/env python
import argparse
from app import app,socketio,engine,Session
from flask_cors import CORS
from db import create_db,delete_db
from models import Base as AppModelBase,CardModel
from socketIO import *
from tests import *
import quizlet
import json


parser = argparse.ArgumentParser()
parser.add_argument('-e','--env',default='dev',help="Pass the environment : dev, test, prod")
parser.add_argument('-d','--db',default=None,help="Pass a flag to set up a db for every time the server restarts.")
args = parser.parse_args()


if __name__ == '__main__':
    args = parser.parse_args()
    CORS(app)



    environment = args.env
    db = args.db

    if(environment in ['test','debug','dev']):
        delete_db(engine)

    AppModelBase.metadata.create_all(engine)

    # Getting the cards from quizlet.
    session=Session()
    quizletClient = quizlet.QuizletClient(client_id='SN77uEA94G', login='Nathan_White34')
    data = quizletClient.sets.endpoint.get("258934949")
    count = 0
    for term in data['terms']:
        count+=1
        definitions = term['definition'].split('\n')
        buzzword = term['term'].strip()
        buzzword.split()
        card = CardModel(buzzword=buzzword,forbidden_words=json.dumps(definitions[:-1]),source=definitions[-1],source_page=' '.join(definitions[-1].split()[-2:]),is_phrase=(len(buzzword.split())>1) )
        session.add(card)
    session.commit()
    session.close()

    if(db):
        if(db == 'startgame'):
            start_game_db(Session)

    # from IPython import embed
    # embed()

    socketio.run(app,debug=True,port=5000,host='localhost')
    # app.run(port=port, debug=False)

    # try:
    # except KeyboardInterrupt as e:
    #     print("Keyboard interrupt! Shutting down server.")
