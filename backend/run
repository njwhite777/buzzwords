#!/usr/bin/env python
import argparse
from flask_cors import CORS
from tests import *
from flask_socketio import SocketIO
import globalVars
from app import create_app,create_db_connection,getQuizletCards

parser = argparse.ArgumentParser()

# TODO: make app configurable from command line. This would require setting up an app constructor method in app.py.
#  or just override config files before starting the app in the following if clause
# parser.add_argument('--debug',default=False,help='Run in debug mode?')
# parser.add_argument('-e','--env',default='dev',help="Pass the environment : dev, test, prod")
# parser.add_argument('-d','--db',default=None,help="Pass a flag to set up a db for every time the server restarts.")
args = parser.parse_args()

if __name__ == '__main__':
    args = parser.parse_args()
    parser.parse_args
    args = vars(args)

    environment = 'dev'
    # TODO: write command line params.
    # config = { k:args[k] for k in ['','','','',''] if k in args }
    app = create_app(app_name="buzzwords",environment=environment,configFile={ 'dev_config' : 'settings','prod_config':''},config={})
    globalVars.socketio=SocketIO(app,async_handlers=True)
    globalVars.Session,globalVars.engine = create_db_connection(app,rebuilddb=True)
    if(environment):
        getQuizletCards()

    from socketIO import *

    CORS(app)
    # globalVars.socketio.run(app,debug=app.config['DEBUG'],port=app.config['PORT'],host=app.config['HOSTNAME'])
    #globalVars.socketio.run(app,debug=app.config['DEBUG'],port=app.config['PORT'],host=app.config['HOSTNAME'],use_reloader=False)
